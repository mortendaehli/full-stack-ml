components:
  schemas:
    Body_login_api_token_post:
      properties:
        client_id:
          title: Client Id
          type: string
        client_secret:
          title: Client Secret
          type: string
        grant_type:
          pattern: password
          title: Grant Type
          type: string
        password:
          title: Password
          type: string
        scope:
          default: ''
          title: Scope
          type: string
        username:
          title: Username
          type: string
      required:
      - username
      - password
      title: Body_login_api_token_post
      type: object
    Body_signup_api_signup_post:
      properties:
        client_id:
          title: Client Id
          type: string
        client_secret:
          title: Client Secret
          type: string
        grant_type:
          pattern: password
          title: Grant Type
          type: string
        password:
          title: Password
          type: string
        scope:
          default: ''
          title: Scope
          type: string
        username:
          title: Username
          type: string
      required:
      - username
      - password
      title: Body_signup_api_signup_post
      type: object
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          title: Detail
          type: array
      title: HTTPValidationError
      type: object
    User:
      properties:
        email:
          title: Email
          type: string
        first_name:
          title: First Name
          type: string
        id:
          title: Id
          type: integer
        is_active:
          default: true
          title: Is Active
          type: boolean
        is_superuser:
          default: false
          title: Is Superuser
          type: boolean
        last_name:
          title: Last Name
          type: string
      required:
      - email
      - id
      title: User
      type: object
    UserCreate:
      properties:
        email:
          title: Email
          type: string
        first_name:
          title: First Name
          type: string
        is_active:
          default: true
          title: Is Active
          type: boolean
        is_superuser:
          default: false
          title: Is Superuser
          type: boolean
        last_name:
          title: Last Name
          type: string
        password:
          title: Password
          type: string
      required:
      - email
      - password
      title: UserCreate
      type: object
    UserEdit:
      properties:
        email:
          title: Email
          type: string
        first_name:
          title: First Name
          type: string
        is_active:
          default: true
          title: Is Active
          type: boolean
        is_superuser:
          default: false
          title: Is Superuser
          type: boolean
        last_name:
          title: Last Name
          type: string
        password:
          title: Password
          type: string
      required:
      - email
      title: UserEdit
      type: object
    ValidationError:
      properties:
        loc:
          items:
            type: string
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object
  securitySchemes:
    OAuth2PasswordBearer:
      flows:
        password:
          scopes: {}
          tokenUrl: /api/token
      type: oauth2
info:
  title: full-stack-ml
  version: 0.1.0
openapi: 3.0.2
paths:
  /:
    get:
      description: Redirect base URL to docs.
      operationId: docs_redirect__get
      responses:
        '307':
          description: Successful Response
      summary: Docs Redirect
  /api/signup:
    post:
      operationId: signup_api_signup_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_signup_api_signup_post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Signup
      tags:
      - auth
  /api/token:
    post:
      operationId: login_api_token_post
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Body_login_api_token_post'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      summary: Login
      tags:
      - auth
  /api/v1/health:
    get:
      operationId: health_check_api_v1_health_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Health Check
  /api/v1/task:
    get:
      operationId: example_task_api_v1_task_get
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: Successful Response
      summary: Example Task
  /api/v1/users:
    get:
      description: Get all users
      operationId: users_list_api_v1_users_get
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/User'
                title: Response Users List Api V1 Users Get
                type: array
          description: Successful Response
      security:
      - OAuth2PasswordBearer: []
      summary: Users List
      tags:
      - users
    post:
      description: Create a new user
      operationId: user_create_api_v1_users_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: User Create
      tags:
      - users
  /api/v1/users/me:
    get:
      description: Get own user
      operationId: user_me_api_v1_users_me_get
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
      security:
      - OAuth2PasswordBearer: []
      summary: User Me
      tags:
      - users
  /api/v1/users/{user_id}:
    delete:
      description: Delete existing user
      operationId: user_delete_api_v1_users__user_id__delete
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: User Delete
      tags:
      - users
    get:
      description: Get any user details
      operationId: user_details_api_v1_users__user_id__get
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: integer
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: User Details
      tags:
      - users
    put:
      description: Update existing user
      operationId: user_edit_api_v1_users__user_id__put
      parameters:
      - in: path
        name: user_id
        required: true
        schema:
          title: User Id
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEdit'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Successful Response
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
      security:
      - OAuth2PasswordBearer: []
      summary: User Edit
      tags:
      - users
