version: "3.8"
services:

  proxy:
    ports:
      - "80:80"
      - "8090:8080"
    command:
      - --providers.docker
      - --providers.docker.constraints=Label(`traefik.constraint-label-stack`, `${TRAEFIK_TAG}`)
      - --providers.docker.exposedbydefault=false
      - --accesslog
      - --log
      - --api
      - --api.insecure=true
    labels:
      - traefik.enable=true
      - traefik.http.routers.${PROJECT_NAME}-traefik-public-http.rule=Host(`${DOMAIN}`)
      - traefik.http.services.${PROJECT_NAME}-traefik-public.loadbalancer.server.port=80

  pgadmin:
    ports:
      - "5050:5050"

  flower:
    ports:
      - "5555:5555"

  worker:
    build:
      context: .
      dockerfile: ./projects/backend/Dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV:-true}

  backend:
    build:
      context: .
      dockerfile: ./projects/backend/Dockerfile
      args:
        INSTALL_DEV: ${INSTALL_DEV:-true}
    ports:
      - "8888:8888"
    volumes:
      - ./projects/backend/:/projects/backend/
    labels:
      - traefik.enable=true
      - traefik.constraint-label-stack=${TRAEFIK_TAG}
      - traefik.http.routers.${PROJECT_NAME}-backend-http.rule=PathPrefix(`/api`) || PathPrefix(`/docs`) || PathPrefix(`/redoc`)
      - traefik.http.services.${PROJECT_NAME}-backend.loadbalancer.server.port=80

  frontend:
    build:
      context: .
      dockerfile: ./projects/frontend/Dockerfile
      args:
        NODE_ENV: dev
    volumes:
      - ./projects/frontend/:/projects/frontend/
    labels:
      - traefik.enable=true
      - traefik.constraint-label-stack=${TRAEFIK_TAG}
      - traefik.http.routers.${PROJECT_NAME}-frontend-http.rule=PathPrefix(`/`)
      - traefik.http.services.${PROJECT_NAME}-frontend.loadbalancer.server.port=80

networks:
  traefik-public:
    external: false
